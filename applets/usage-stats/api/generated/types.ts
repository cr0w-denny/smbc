/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/usage-stats/exceptions/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["UsageStats_list_exceptions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/usage-stats/ui-usage/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["UsageStats_list_ui_usage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/usage-stats/users-usage/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["UsageStats_list_users_usage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Query parameters */
        ListExceptionsParams: {
            /** Format: date-time */
            start_date: string;
            /** Format: date-time */
            end_date: string;
        };
        UsageStatsComponentObj: {
            component: string;
            /** Format: int32 */
            count: number;
        };
        UsageStatsExceptionObj: {
            email: string;
            name: string;
            /** Format: int32 */
            count: number;
        };
        /** @description Response definitions */
        UsageStatsUserObj: {
            email: string;
            name: string;
            /** Format: int32 */
            count: number;
        };
    };
    responses: never;
    parameters: {
        "DateRangeQueryParams.end_date": string;
        "DateRangeQueryParams.start_date": string;
        "ListUIQueryParams.user_email": string;
        "ListUsersQueryParams.ui_filter": string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    UsageStats_list_exceptions: {
        parameters: {
            query: {
                start_date: components["parameters"]["DateRangeQueryParams.start_date"];
                end_date: components["parameters"]["DateRangeQueryParams.end_date"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        component_map: Record<string, never>;
                        records: components["schemas"]["UsageStatsExceptionObj"][];
                    };
                };
            };
        };
    };
    UsageStats_list_ui_usage: {
        parameters: {
            query: {
                start_date: components["parameters"]["DateRangeQueryParams.start_date"];
                end_date: components["parameters"]["DateRangeQueryParams.end_date"];
                user_email?: components["parameters"]["ListUIQueryParams.user_email"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        component_map: Record<string, never>;
                        records: components["schemas"]["UsageStatsComponentObj"][];
                    };
                };
            };
        };
    };
    UsageStats_list_users_usage: {
        parameters: {
            query: {
                start_date: components["parameters"]["DateRangeQueryParams.start_date"];
                end_date: components["parameters"]["DateRangeQueryParams.end_date"];
                ui_filter?: components["parameters"]["ListUsersQueryParams.ui_filter"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        component_map: Record<string, never>;
                        records: components["schemas"]["UsageStatsUserObj"][];
                    };
                };
            };
        };
    };
}
