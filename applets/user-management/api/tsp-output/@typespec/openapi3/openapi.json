{
  "openapi": "3.0.0",
  "info": {
    "title": "User Management API",
    "description": "User Management API\n\nThis API provides endpoints for managing users in the system.",
    "version": "0.0.0"
  },
  "tags": [],
  "paths": {
    "/users": {
      "get": {
        "operationId": "Users_list",
        "description": "Get all users with pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-mock-pagination": true,
              "default": 1
            },
            "x-mock-pagination": true,
            "explode": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-mock-pagination": true,
              "default": 20
            },
            "x-mock-pagination": true,
            "explode": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-mock-sort": true
            },
            "x-mock-sort": true,
            "explode": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "x-mock-sort": true,
              "default": "asc"
            },
            "x-mock-sort": true,
            "explode": false
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-mock-search": {
                "fields": [
                  "email",
                  "firstName",
                  "lastName"
                ]
              }
            },
            "x-mock-search": {
              "fields": [
                "email",
                "firstName",
                "lastName"
              ]
            },
            "explode": false
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-mock-filter": {
                "field": "username",
                "strategy": "partial-match"
              }
            },
            "x-mock-filter": {
              "field": "username",
              "strategy": "partial-match"
            },
            "explode": false
          },
          {
            "name": "isAdmin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-mock-filter": {
                "field": "isAdmin",
                "strategy": "exact"
              }
            },
            "x-mock-filter": {
              "field": "isAdmin",
              "strategy": "exact"
            },
            "explode": false
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-mock-filter": {
                "field": "email",
                "strategy": "partial-match"
              }
            },
            "x-mock-filter": {
              "field": "email",
              "strategy": "partial-match"
            },
            "explode": false
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "x-mock-filter": {
                "field": "isActive",
                "strategy": "boolean-choice"
              }
            },
            "x-mock-filter": {
              "field": "isActive",
              "strategy": "boolean-choice"
            },
            "explode": false
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "summary",
                "detailed"
              ]
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-mock-response": {
          "case": "format",
          "when": {
            "summary": "UserSummary",
            "detailed": "UserDetailed"
          },
          "default": "User"
        }
      },
      "post": {
        "operationId": "Users_create",
        "description": "Create a new user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "Users_get",
        "description": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Users_update",
        "description": "Update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Users_delete",
        "description": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUserRequest": {
        "type": "object",
        "required": [
          "username",
          "email",
          "firstName",
          "lastName"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "description": "User creation request"
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        },
        "description": "Error response"
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "description": "User update request"
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "firstName",
          "lastName",
          "createdAt",
          "updatedAt",
          "isActive",
          "isAdmin"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-mock-data": {
              "faker": "string.uuid"
            }
          },
          "username": {
            "type": "string",
            "x-mock-data": {
              "faker": "internet.userName",
              "unique": true
            }
          },
          "email": {
            "type": "string",
            "x-mock-data": {
              "faker": "internet.email",
              "unique": true
            }
          },
          "firstName": {
            "type": "string",
            "x-mock-data": {
              "faker": "person.firstName"
            }
          },
          "lastName": {
            "type": "string",
            "x-mock-data": {
              "faker": "person.lastName"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "x-mock-data": {
              "relative": "-30d to now",
              "format": "MMMM dd, yyyy"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "x-mock-data": {
              "relative": "-7d to now",
              "format": "yyyy-MM-dd"
            }
          },
          "isActive": {
            "type": "boolean",
            "x-mock-data": {
              "faker": "datatype.boolean",
              "weight": 0.9
            }
          },
          "isAdmin": {
            "type": "boolean",
            "x-mock-data": {
              "faker": "datatype.boolean",
              "weight": 0.1
            }
          }
        },
        "description": "A user in the system"
      },
      "UserDetailed": {
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "firstName",
          "lastName",
          "createdAt",
          "updatedAt",
          "isActive",
          "isAdmin",
          "fullName",
          "memberSince"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-mock-data": {
              "faker": "string.uuid"
            }
          },
          "username": {
            "type": "string",
            "x-mock-data": {
              "faker": "internet.userName",
              "unique": true
            }
          },
          "email": {
            "type": "string",
            "x-mock-data": {
              "faker": "internet.email",
              "unique": true
            }
          },
          "firstName": {
            "type": "string",
            "x-mock-data": {
              "faker": "person.firstName"
            }
          },
          "lastName": {
            "type": "string",
            "x-mock-data": {
              "faker": "person.lastName"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "x-mock-data": {
              "relative": "-30d to now",
              "format": "MMMM dd, yyyy"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "x-mock-data": {
              "relative": "-7d to now",
              "format": "yyyy-MM-dd"
            }
          },
          "isActive": {
            "type": "boolean",
            "x-mock-data": {
              "faker": "datatype.boolean",
              "weight": 0.9
            }
          },
          "isAdmin": {
            "type": "boolean",
            "x-mock-data": {
              "faker": "datatype.boolean",
              "weight": 0.1
            }
          },
          "fullName": {
            "type": "string"
          },
          "memberSince": {
            "type": "string",
            "format": "date-time",
            "x-mock-data": {
              "relative": "-300d to now",
              "format": "yyyy-MM-dd"
            }
          }
        },
        "description": "Detailed view of a user with computed fields"
      },
      "UserList": {
        "type": "object",
        "required": [
          "users",
          "total",
          "page",
          "pageSize"
        ],
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Paginated list of users"
      },
      "UserSummary": {
        "type": "object",
        "required": [
          "id",
          "username",
          "name",
          "email",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          }
        },
        "description": "Summary view of a user"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1/user-management",
      "description": "Mock server",
      "variables": {}
    },
    {
      "url": "http://localhost:3001/api/v1/user-management",
      "description": "Development server",
      "variables": {}
    },
    {
      "url": "https://api.smbcgroup.com/api/v1/user-management",
      "description": "Production server",
      "variables": {}
    }
  ]
}
