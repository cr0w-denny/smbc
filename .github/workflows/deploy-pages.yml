name: Deploy Apps to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install Dependencies with legacy peer deps
        run: |
          rm -f package-lock.json
          npm install --ignore-scripts --legacy-peer-deps

      - name: Build all packages and apps
        run: npx turbo run build --continue
        env:
          NODE_ENV: development
          VITE_BASE_PATH_GH_PAGES: "/${{ github.event.repository.name }}/"
          VITE_BASE_PATH_MUI_HOST_DEV: "/${{ github.event.repository.name }}/mui-host-dev/"
          VITE_BASE_PATH_EWI: "/${{ github.event.repository.name }}/ewi/"
          VITE_BASE_PATH_STORYBOOK: "/${{ github.event.repository.name }}/storybook/"
          VITE_USE_MOCKS: "true"

      - name: Create deployment directory and copy all builds
        run: |
          mkdir -p ./deploy

          # Copy GitHub Pages Index
          cp -r ./apps/gh-pages/dist/* ./deploy/
          mkdir -p ./deploy/assets
          cp ./apps/mui-storybook/public/assets/logo*.png ./deploy/assets/

          # Copy MUI Host Dev
          mkdir -p ./deploy/mui-host-dev
          cp -r ./apps/mui-host-dev/dist/* ./deploy/mui-host-dev/
          mkdir -p ./deploy/mui-host-dev/assets
          cp ./apps/mui-storybook/public/assets/logo*.png ./deploy/mui-host-dev/assets/

          # Copy EWI App
          mkdir -p ./deploy/ewi
          cp -r ./apps/mui-ewi/dist/* ./deploy/ewi/
          mkdir -p ./deploy/ewi/assets
          cp ./apps/mui-storybook/public/assets/logo*.png ./deploy/ewi/assets/

          # Copy Storybook
          mkdir -p ./deploy/storybook
          cp -r ./apps/mui-storybook/dist/* ./deploy/storybook/
          mkdir -p ./deploy/storybook/assets
          cp ./apps/mui-storybook/public/assets/logo*.png ./deploy/storybook/assets/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deploy'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4