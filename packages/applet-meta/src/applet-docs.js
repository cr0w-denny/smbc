/**
 * Auto-generated applet documentation
 * Generated at: 2025-07-16T23:25:12.241Z
 */

export const APPLET_DOCS = {
  "employee-directory": {},
  "hello": {},
  "product-catalog": {
    "frontend": {
      "markdown": "# @smbc/product-catalog-mui\n\nDemo applet showcasing SMBC architecture with product catalog functionality.\n\n## Technical Demonstrations\n\n- **Static Data**: Simple product listing without API integration\n- **Permission System**: Basic view permissions\n- **Component Export**: Minimal applet structure\n- **MUI Integration**: MUI table and components\n",
      "html": "<h1>@smbc/product-catalog-mui</h1>\n<p>Demo applet showcasing SMBC architecture with product catalog functionality.</p>\n<h2>Technical Demonstrations</h2>\n<ul>\n<li><strong>Static Data</strong>: Simple product listing without API integration</li>\n<li><strong>Permission System</strong>: Basic view permissions</li>\n<li><strong>Component Export</strong>: Minimal applet structure</li>\n<li><strong>MUI Integration</strong>: MUI table and components</li>\n</ul>\n"
    },
    "backend": {
      "markdown": "# @smbc/product-catalog-django\n\n```bash\npip install smbc-product-catalog\n```\n\n## Configuration\n\nAdd to Django settings:\n\n```python\nINSTALLED_APPS = [\n    # ... other apps\n    'smbc.product_catalog',\n    'rest_framework',\n]\n\n# Product Catalog Configuration\nSMBC_PRODUCT_CATALOG_CONFIG = {\n    'BASE_URL': '/api/v1/products/',\n    'ENABLE_CACHE': True,\n    'CACHE_TIMEOUT': 300,  # 5 minutes\n}\n```\n\n## API Endpoints\n\n### Products\n\n- `GET /api/v1/products/` - List products\n- `GET /api/v1/products/{id}/` - Product detail\n- `POST /api/v1/products/` - Create product (admin only)\n- `PUT /api/v1/products/{id}/` - Update product (admin only)\n- `DELETE /api/v1/products/{id}/` - Delete product (admin only)\n\n### Categories\n\n- `GET /api/v1/products/categories/` - List categories\n- `GET /api/v1/products/categories/{id}/` - Category detail\n\n## Models\n\n```python\nclass Product(models.Model):\n    name = models.CharField(max_length=200)\n    description = models.TextField()\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    sku = models.CharField(max_length=50, unique=True)\n    stock_quantity = models.IntegerField(default=0)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n```\n\n## Permissions\n\n- View products: Available to all authenticated users\n- Manage products: Requires `product_catalog.change_product` permission\n",
      "html": "<h1>@smbc/product-catalog-django</h1>\n<pre><code class=\"language-bash\">pip install smbc-product-catalog\n</code></pre>\n<h2>Configuration</h2>\n<p>Add to Django settings:</p>\n<pre><code class=\"language-python\">INSTALLED_APPS = [\n    # ... other apps\n    &#39;smbc.product_catalog&#39;,\n    &#39;rest_framework&#39;,\n]\n\n# Product Catalog Configuration\nSMBC_PRODUCT_CATALOG_CONFIG = {\n    &#39;BASE_URL&#39;: &#39;/api/v1/products/&#39;,\n    &#39;ENABLE_CACHE&#39;: True,\n    &#39;CACHE_TIMEOUT&#39;: 300,  # 5 minutes\n}\n</code></pre>\n<h2>API Endpoints</h2>\n<h3>Products</h3>\n<ul>\n<li><code>GET /api/v1/products/</code> - List products</li>\n<li><code>GET /api/v1/products/{id}/</code> - Product detail</li>\n<li><code>POST /api/v1/products/</code> - Create product (admin only)</li>\n<li><code>PUT /api/v1/products/{id}/</code> - Update product (admin only)</li>\n<li><code>DELETE /api/v1/products/{id}/</code> - Delete product (admin only)</li>\n</ul>\n<h3>Categories</h3>\n<ul>\n<li><code>GET /api/v1/products/categories/</code> - List categories</li>\n<li><code>GET /api/v1/products/categories/{id}/</code> - Category detail</li>\n</ul>\n<h2>Models</h2>\n<pre><code class=\"language-python\">class Product(models.Model):\n    name = models.CharField(max_length=200)\n    description = models.TextField()\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    sku = models.CharField(max_length=50, unique=True)\n    stock_quantity = models.IntegerField(default=0)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n</code></pre>\n<h2>Permissions</h2>\n<ul>\n<li>View products: Available to all authenticated users</li>\n<li>Manage products: Requires <code>product_catalog.change_product</code> permission</li>\n</ul>\n"
    }
  },
  "usage-stats": {},
  "user-management": {
    "frontend": {
      "markdown": "# @smbc/user-management-mui\n\nReact MUI applet for user management operations.\n\n## Features\n\n- Full CRUD operations (Create, Read, Update, Delete)\n- Advanced filtering with search, status, email filters\n- Sorting by multiple fields\n- Pagination with configurable page sizes\n- Permission-based access control\n- Responsive design\n- Real-time updates with optimistic UI\n- Loading states and error handling\n- User profile views\n- Multiple view modes (summary/detailed)\n\n## Usage\n\n```typescript\nimport { AppletProvider } from '@smbc/mui-applet-host'\nimport userManagementApplet from '@smbc/user-management-mui'\n\n<AppletProvider applets={[userManagementApplet]} roles={roles} user={user}>\n  <Routes>\n    <Route path=\"/users/*\" element={<AppletRoute applet=\"user-management\" />} />\n  </Routes>\n</AppletProvider>\n```\n\n## Permissions\n\nThe applet defines these permissions:\n\n- `VIEW_USERS` - View user list and profiles\n- `EDIT_USERS` - Create and update users\n- `DELETE_USERS` - Delete users\n\n## Configuration\n\n```typescript\nconst permissionMappings = {\n  \"user-management\": {\n    VIEW_USERS: [\"Staff\", \"Admin\"],\n    EDIT_USERS: [\"Admin\"],\n    DELETE_USERS: [\"Admin\"],\n  },\n};\n```\n\n## Development\n\n```bash\nnpm run dev     # Start development server\nnpm run build   # Build for production\nnpm test        # Run tests\n```\n",
      "html": "<h1>@smbc/user-management-mui</h1>\n<p>React MUI applet for user management operations.</p>\n<h2>Features</h2>\n<ul>\n<li>Full CRUD operations (Create, Read, Update, Delete)</li>\n<li>Advanced filtering with search, status, email filters</li>\n<li>Sorting by multiple fields</li>\n<li>Pagination with configurable page sizes</li>\n<li>Permission-based access control</li>\n<li>Responsive design</li>\n<li>Real-time updates with optimistic UI</li>\n<li>Loading states and error handling</li>\n<li>User profile views</li>\n<li>Multiple view modes (summary/detailed)</li>\n</ul>\n<h2>Usage</h2>\n<pre><code class=\"language-typescript\">import { AppletProvider } from &#39;@smbc/mui-applet-host&#39;\nimport userManagementApplet from &#39;@smbc/user-management-mui&#39;\n\n&lt;AppletProvider applets={[userManagementApplet]} roles={roles} user={user}&gt;\n  &lt;Routes&gt;\n    &lt;Route path=&quot;/users/*&quot; element={&lt;AppletRoute applet=&quot;user-management&quot; /&gt;} /&gt;\n  &lt;/Routes&gt;\n&lt;/AppletProvider&gt;\n</code></pre>\n<h2>Permissions</h2>\n<p>The applet defines these permissions:</p>\n<ul>\n<li><code>VIEW_USERS</code> - View user list and profiles</li>\n<li><code>EDIT_USERS</code> - Create and update users</li>\n<li><code>DELETE_USERS</code> - Delete users</li>\n</ul>\n<h2>Configuration</h2>\n<pre><code class=\"language-typescript\">const permissionMappings = {\n  &quot;user-management&quot;: {\n    VIEW_USERS: [&quot;Staff&quot;, &quot;Admin&quot;],\n    EDIT_USERS: [&quot;Admin&quot;],\n    DELETE_USERS: [&quot;Admin&quot;],\n  },\n};\n</code></pre>\n<h2>Development</h2>\n<pre><code class=\"language-bash\">npm run dev     # Start development server\nnpm run build   # Build for production\nnpm test        # Run tests\n</code></pre>\n"
    },
    "backend": {
      "markdown": "# @smbc/user-management-django\n\n```bash\npip install smbc-user-management\n```\n\n## Quick Start\n\nAdd to your Django settings:\n\n```python\nINSTALLED_APPS = [\n    # ... other apps\n    'smbc.user_management',\n    'rest_framework',\n]\n\n# API Configuration\nSMBC_USER_MANAGEMENT_CONFIG = {\n    'BASE_URL': '/api/v1/users/',\n    'ENABLE_MOCK_DATA': False,\n    'PAGINATION_SIZE': 20,\n}\n```\n\nInclude the URLs:\n\n```python\n# urls.py\nfrom django.urls import path, include\n\nurlpatterns = [\n    # ... other patterns\n    path('api/v1/users/', include('smbc.user_management.urls')),\n]\n```\n\n## API Endpoints\n\n- `GET /api/v1/users/` - List users with filtering and pagination\n- `POST /api/v1/users/` - Create new user\n- `GET /api/v1/users/{id}/` - Get user details\n- `PUT /api/v1/users/{id}/` - Update user\n- `DELETE /api/v1/users/{id}/` - Delete user\n\n## Permissions\n\nUses Django's built-in permission system:\n\n- `user_management.view_user`\n- `user_management.add_user`\n- `user_management.change_user`\n- `user_management.delete_user`\n\n## Development\n\nRun migrations:\n\n```bash\npython manage.py migrate\n```\n\nLoad sample data:\n\n```bash\npython manage.py loaddata user_management_sample\n```\n",
      "html": "<h1>@smbc/user-management-django</h1>\n<pre><code class=\"language-bash\">pip install smbc-user-management\n</code></pre>\n<h2>Quick Start</h2>\n<p>Add to your Django settings:</p>\n<pre><code class=\"language-python\">INSTALLED_APPS = [\n    # ... other apps\n    &#39;smbc.user_management&#39;,\n    &#39;rest_framework&#39;,\n]\n\n# API Configuration\nSMBC_USER_MANAGEMENT_CONFIG = {\n    &#39;BASE_URL&#39;: &#39;/api/v1/users/&#39;,\n    &#39;ENABLE_MOCK_DATA&#39;: False,\n    &#39;PAGINATION_SIZE&#39;: 20,\n}\n</code></pre>\n<p>Include the URLs:</p>\n<pre><code class=\"language-python\"># urls.py\nfrom django.urls import path, include\n\nurlpatterns = [\n    # ... other patterns\n    path(&#39;api/v1/users/&#39;, include(&#39;smbc.user_management.urls&#39;)),\n]\n</code></pre>\n<h2>API Endpoints</h2>\n<ul>\n<li><code>GET /api/v1/users/</code> - List users with filtering and pagination</li>\n<li><code>POST /api/v1/users/</code> - Create new user</li>\n<li><code>GET /api/v1/users/{id}/</code> - Get user details</li>\n<li><code>PUT /api/v1/users/{id}/</code> - Update user</li>\n<li><code>DELETE /api/v1/users/{id}/</code> - Delete user</li>\n</ul>\n<h2>Permissions</h2>\n<p>Uses Django&#39;s built-in permission system:</p>\n<ul>\n<li><code>user_management.view_user</code></li>\n<li><code>user_management.add_user</code></li>\n<li><code>user_management.change_user</code></li>\n<li><code>user_management.delete_user</code></li>\n</ul>\n<h2>Development</h2>\n<p>Run migrations:</p>\n<pre><code class=\"language-bash\">python manage.py migrate\n</code></pre>\n<p>Load sample data:</p>\n<pre><code class=\"language-bash\">python manage.py loaddata user_management_sample\n</code></pre>\n"
    }
  }
};

// Helper to get documentation for a specific applet
export function getAppletDocs(appletId) {
  return APPLET_DOCS[appletId];
}

// Helper to check if an applet has backend documentation
export function hasBackendDocs(appletId) {
  return !!APPLET_DOCS[appletId]?.backend;
}
