// Generated mock handlers for {{apiName}}
// Generated at: {{timestamp}}

import { http, HttpResponse } from 'msw';
import { faker } from '@faker-js/faker';
{{#if usesDateFormatting}}
import { format } from 'date-fns';
{{/if}}

// Configuration for mock responses
const mockConfig = {
  baseUrl: '{{baseUrl}}',
  delay: { min: {{delay.min}}, max: {{delay.max}} },
  errorRate: {{errorRate}},
  dataSetSize: { min: {{dataSetSize.min}}, max: {{dataSetSize.max}} },
};

// Utility: Configurable delay for realistic API responses
async function delay() {
  const delayMs = typeof mockConfig.delay === 'number' 
    ? mockConfig.delay 
    : faker.number.int({ min: mockConfig.delay.min, max: mockConfig.delay.max });
  await new Promise(resolve => setTimeout(resolve, delayMs));
}

{{#each schemas}}
{{> schema this}}

{{/each}}

// Reset function to clear all data stores and initialization flags
export function resetMocks() {
{{#each schemas}}
  // Reset {{name}} data
  {{lowerName}}DataStore.clear();
  {{lowerName}}DataInitialized = false;
{{/each}}
  
  console.log('{{apiName}} mock data stores reset');
}

// Export MSW handlers
export const handlers = [
{{#each operations}}
{{> operation this}},
{{/each}}
];